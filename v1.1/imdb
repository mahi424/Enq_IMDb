#!/usr/bin/python
import urllib2
from bs4 import BeautifulSoup
import re
# import requests
from textwrap import fill

def formatItem(left, right):
   wrapped = fill(right, width=75, subsequent_indent=' '*15)
   return '  {0:<13}{1}'.format(left, wrapped)

query=raw_input("Movie Name\n")
keywords=query.split(" ")
q=""
for key in keywords:
	q=q+key+"+"


search="http://www.imdb.com/find?ref_=nv_sr_fn&q="+q[0:len(q)-1]+"&s=all"


page = urllib2.urlopen(search)
soup = BeautifulSoup(page, "lxml")

i=0;
List=[]
for item in soup.find_all('td', class_="result_text"):
	try:
		x=item.find('a', attrs={'href': re.compile("^/title")}).get("href")
		List.append(x)
	except Exception as e:
		continue
	else:
		pass
	
# print len(List)
if len(List)>0:
	print str(len(List))+" Entries Found \n"
	if len(List)>3:
		print "Showing the top 3\n"
else:
	print "No Result Found, Try a different keywords"
	exit(0)

for l in List:
	i=i+1
	s="http://www.imdb.com"+str(l)
	# page = requests.get(s)
	page = urllib2.urlopen(s)
	# print page.status_code
	# print page.content
	# soup = BeautifulSoup(page.content, 'html.parser')
	soup = BeautifulSoup(page, 'html.parser')
	# print list(soup.children)
	# print "############################################################"

	if soup.title is not None:
		print formatItem("Title:",soup.title.text.encode('utf-8')) # title and year
		# str(objdata).encode('utf-8')

	if soup.find('div', class_="ratingValue") is not None:
		print formatItem("IMDB Ratings: ",soup.find('div', class_="ratingValue").text.lstrip())

	detail= soup.find('div', class_="title_wrapper")
	# print detail.find('h1').text # year
	if detail.find('div', class_="subtext").find('time') is not None:
		time=detail.find('div', class_="subtext").find('time').text.encode('utf-8')
		print formatItem("Duration: ",time.rstrip().lstrip().encode('utf-8'))

	genres=detail.find('div', class_="subtext").find_all('a')
	if len(genres)>0:
		print formatItem("Genres: ","")
		for genre in genres:
			print formatItem('',genre.text.encode('utf-8'))

	story=soup.find('div', class_="inline canwrap")
	if story is not None:
		# print "STORYLINE:\n"
		# print story.text
		print(formatItem("Storyline: ", story.text.split("               ")[0].encode('utf-8')))

		if len(story.text.split("               "))>1:
			print formatItem("","Written By: "+ story.text.split("               ")[1].split("Written by")[1].lstrip().encode('utf-8') )


	print "############################################################"
	if i > 1:
		break;
